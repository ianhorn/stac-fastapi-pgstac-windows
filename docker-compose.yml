services:
  app:
    container_name: stac-fastapi-pgstac
    image: stac-fastapi-pgstac
    build: .
    volumes:
      - "C:/api/app:C:/app"
    environment:
      - STAC_FASTAPI_TITLE=${STAC_FASTAPI_TITLE}
      - STAC_FASTAPI_DESCRIPTION=${STAC_FASTAPI_DESCRIPTION}
      - STAC_FASTAPI_LANDING_ID=${STAC_FASTAPI_LANDING_ID}
      - APP_HOST=0.0.0.0
      - APP_PORT=8082
      - RELOAD=true
      - ENVIRONMENT=local
      - POSTGRES_USER=postgres
      - POSTGRES_PASS=postgres
      - POSTGRES_DBNAME=postgis
      - POSTGRES_HOST_READER=database
      - POSTGRES_HOST_WRITER=database
      - POSTGRES_PORT=5432
      - WEB_CONCURRENCY=10
      - VSI_CACHE=TRUE
      - GDAL_HTTP_MERGE_CONSECUTIVE_RANGES=YES
      - GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR
      - DB_MIN_CONN_SIZE=1
      - DB_MAX_CONN_SIZE=1
      - USE_API_HYDRATE=${USE_API_HYDRATE:-false}
    ports:
      - "8082:8082"
    depends_on:
      - database
    command: cmd /c "python -m stac_fastapi.pgstac.app"

  # tests:
  #   container_name: stac-fastapi-pgstac-test
  #   image: stac-utils/stac-fastapi-pgstac-test
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.tests
  #   volumes:
  #     - .:/app
  #   environment:
  #     - ENVIRONMENT=local
  #     - DB_MIN_CONN_SIZE=1
  #     - DB_MAX_CONN_SIZE=1
  #     - USE_API_HYDRATE=${USE_API_HYDRATE:-false}
  #   command: bash -c "python -m pytest -s -vv"

  database:
    container_name: stac-db
    image: ianhorn/pgstac:nano2022
    volumes:
      - pgdata:C:/data/pgdata
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgis
      - PGUSER=postgis
      - PGPASSWORD=postgis
    ports:
      - "5439:5432"
    command: postgres -N 500

  # Load joplin demo dataset into the PGStac Application
  # loadjoplin:
  #   image: stac-utils/stac-fastapi-pgstac
  #   environment:
  #     - ENVIRONMENT=development
  #   volumes:
  #     - ./stac_fastapi:/app/stac_fastapi
  #     - ./scripts:/app/scripts
  #   command: >
  #     /bin/sh -c "
  #       ./scripts/wait-for-it.sh -t 60 app:8082 &&
  #       python -m pip install requests &&
  #       python /app/scripts/ingest_joplin.py http://app:8082
  #       "
  #   depends_on:
  #     - database
  #     - app

networks:
  default:
    name: stac-fastapi-network

volumes:
  pgdata:
