services:
  app:
    container_name: sfp
    image: ianhorn/nanoserver:1.0.0
    build: .
    environment:
      - APP_HOST=0.0.0.0
      - APP_PORT=8082
      - RELOAD=true
      - ENVIRONMENT=local
      - POSTGRES_USER=postgres
      - POSTGRES_PASS=postgres
      - POSTGRES_DBNAME=postgis
      - POSTGRES_HOST_READER=postgresql://postgres:postgis@localhost:5432/postgis
      - POSTGRES_HOST_WRITER=postgresql://postgres:postgis@localhost:5432/postgis
      - POSTGRES_PORT=5432
      - WEB_CONCURRENCY=10
      - VSI_CACHE=TRUE
      - GDAL_HTTP_MERGE_CONSECUTIVE_RANGES=YES
      - GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR
      - DB_MIN_CONN_SIZE=1
      - DB_MAX_CONN_SIZE=1
      - USE_API_HYDRATE=${USE_API_HYDRATE:-false}
    ports:
      - "8082:8082"
    # volumes:
    #   - .:/app
    # depends_on:
    #   - database
    command: cmd /c "C:/app/scripts/wait-for-it.cmd postgis:5432 && python -m stac_fastapi.pgstac.app"

  # tests:
  #   container_name: sfp-test
  #   image: ianhorn/nanoserver:1.0.0
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.tests
  #   # volumes:
  #   #   - .:/app
  #   environment:
  #     - ENVIRONMENT=local
  #     - DB_MIN_CONN_SIZE=1
  #     - DB_MAX_CONN_SIZE=1
  #     - USE_API_HYDRATE=${USE_API_HYDRATE:-false}
  #   command: cmd /c "python -m pytest -s -vv"

  # # Load joplin demo dataset into the PGStac Application
  # loadjoplin:
  #   image: ianhorn/nanoserver:1.0.0
  #   environment:
  #     - ENVIRONMENT=development
  #   # volumes:
  #     # - /stac_fastapi:/app/stac_fastapi
  #     # - /scripts:/app/scripts
  #   command: >
  #     cmd "
  #       C:/app/scripts/wait-for-it.sh -t 60 app:8082 &&
  #       python -m pip install requests &&
  #       python C:/app/scripts/ingest_joplin.py http://app:8082
  #       "
  #   depends_on:
  #     - app

networks:
  default:
    name: stac-fastapi-network
