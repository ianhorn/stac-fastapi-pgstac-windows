services:
  app:
    container_name: stac-fastapi-pgstac
    image: ianhorn/stac-fastapi-windows:1.0.0
    environment:
      - APP_HOST=0.0.0.0
      - APP_PORT=8082
      - RELOAD=true
      - ENVIRONMENT=local
      - POSTGRES_USER=username
      - POSTGRES_PASS=password
      - POSTGRES_DBNAME=postgis
      - POSTGRES_PORT=5432
      - WEB_CONCURRENCY=10
      - VSI_CACHE=TRUE
      - GDAL_HTTP_MERGE_CONSECUTIVE_RANGES=YES
      - GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR
      - DB_MIN_CONN_SIZE=1
      - DB_MAX_CONN_SIZE=1
      - USE_API_HYDRATE=${USE_API_HYDRATE:-false}
    ports:
      - "8082:8082"
    volumes:
      - C:\\api\\stac-fastapi-pgstac-windows\\stac_fastapi\\pgstac":C:\\app
    depends_on:
      - database
    command: bash -c "./scripts/wait-for-it.sh database:5432 && python -m stac_fastapi.pgstac.app"

  tests:
    container_name: stac-fastapi-pgstac-test
    image: ianhorn/stac-fastapi-windows:1.0.0
    volumes:
      - .:/app
    environment:
      - ENVIRONMENT=local
      - DB_MIN_CONN_SIZE=1
      - DB_MAX_CONN_SIZE=1
      - USE_API_HYDRATE=${USE_API_HYDRATE:-false}
    command: bash -c "python -m pytest -s -vv"

  database:
    container_name: stac-db
    image: ianhorn/pgstac-windows:1.0.0
    environment:
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgis
      - PGUSER=username
      - PGPASSWORD=password
      - PGDATABASE=postgis
    ports:
      - "5439:5432"
    command: postgres -N 500

  # Load joplin demo dataset into the PGStac Application
  loadjoplin:
    image: ianhorn/pgstac-windows:1.0.0
    environment:
      - ENVIRONMENT=development
    volumes:
      - ./stac_fastapi:/app/stac_fastapi
      - ./scripts:/app/scripts
    command: >
      /bin/sh -c "
        ./scripts/wait-for-it.sh -t 60 app:8082 &&
        python -m pip install requests &&
        python /app/scripts/ingest_joplin.py http://app:8082
        "
    depends_on:
      - database
      - app

networks:
  default:
    name: stac-fastapi-network
